<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_l_a_data_structs_8h" kind="file" language="C++">
    <compoundname>LADataStructs.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">string_view</includes>
    <includes local="no">functional</includes>
    <includes local="yes">fsm/FiniteStateMachine.h</includes>
    <includedby refid="_lexical_analyzer_8h" local="yes">include/lexana/LexicalAnalyzer.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/lexana/LADataStructs.h</label>
        <link refid="_l_a_data_structs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>fsm/FiniteStateMachine.h</label>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="3">
        <label>string_view</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/lexana/LADataStructs.h</label>
        <link refid="_l_a_data_structs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/lexana/LexicalAnalyzer.h</label>
        <link refid="_lexical_analyzer_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structm0st4fa_1_1lexana_1_1_token" prot="public">m0st4fa::lexana::Token</innerclass>
    <innerclass refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result" prot="public">m0st4fa::lexana::LexicalAnalyzerResult</innerclass>
    <innerclass refid="structm0st4fa_1_1lexana_1_1_position" prot="public">m0st4fa::lexana::Position</innerclass>
    <innernamespace refid="namespacem0st4fa">m0st4fa</innernamespace>
    <innernamespace refid="namespacem0st4fa_1_1lexana">m0st4fa::lexana</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsm/FiniteStateMachine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespacem0st4fa" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacem0st4fa_1_1lexana" kindref="compound">m0st4fa::lexana</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1eb" kindref="member">LA_FLAG</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1ebaab8aaebf0f3608778869710b280d147d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1ebaab8aaebf0f3608778869710b280d147d" kindref="member">LAF_DEFAULT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0b0000,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1ebaf1230dc0b95964fc998150653b2eb59d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1ebaf1230dc0b95964fc998150653b2eb59d" kindref="member">LAF_ALLOW_WHITE_SPACE_CHARS</ref><sp/>=<sp/>0b0001,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1eba77875afba3067542c2c1b1cd0e09b965" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1eba77875afba3067542c2c1b1cd0e09b965" kindref="member">LAF_ALLOW_ONLY_NEW_LINE</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0b0010,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1eba6a0611418b9f77b0f6ae06ba41fbcfbd" kindref="member">LAF_COUNT</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="26" refid="namespacem0st4fa_1_1lexana_1a9a9d1a058e5b31ba3d8a79f0646cc1eba6a0611418b9f77b0f6ae06ba41fbcfbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TerminalT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AttrT<sp/>=<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">_view&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>(TerminalT<sp/>a)<sp/>{<sp/>TerminalT::T_EOF;<sp/>TerminalT::T_EPSILON;<sp/>stringfy(a);<sp/>}</highlight></codeline>
<codeline lineno="36" refid="structm0st4fa_1_1lexana_1_1_token" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1lexana_1_1_token" kindref="compound">Token</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structm0st4fa_1_1lexana_1_1_token_1ad038bc29e309a10268a05d9d0a274cb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TerminalT<sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1ad038bc29e309a10268a05d9d0a274cb0" kindref="member">name</ref><sp/>=<sp/>TerminalT::T_EOF;</highlight></codeline>
<codeline lineno="45" refid="structm0st4fa_1_1lexana_1_1_token_1a79643c2239a700748387923a29bcd3f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AttrT<sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1a79643c2239a700748387923a29bcd3f5" kindref="member">attribute</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structm0st4fa_1_1lexana_1_1_token_1a45437adb5499adcbd7c98653bba277b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_token" kindref="compound">Token&lt;TerminalT, AttrT&gt;</ref><sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1a45437adb5499adcbd7c98653bba277b5" kindref="member">EPSILON</ref>;</highlight></codeline>
<codeline lineno="54" refid="structm0st4fa_1_1lexana_1_1_token_1ac16458b3559cc69479bb176cdd7a5d03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_token" kindref="compound">Token&lt;TerminalT, AttrT&gt;</ref><sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1ac16458b3559cc69479bb176cdd7a5d03" kindref="member">TEOF</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structm0st4fa_1_1lexana_1_1_token_1a1cb9aab109d53f9e5dd898dc8cea5f3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1a1cb9aab109d53f9e5dd898dc8cea5f3a" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_token" kindref="compound">Token</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1ad038bc29e309a10268a05d9d0a274cb0" kindref="member">name</ref><sp/>==<sp/>rhs.<ref refid="structm0st4fa_1_1lexana_1_1_token_1ad038bc29e309a10268a05d9d0a274cb0" kindref="member">name</ref><sp/>&amp;&amp;<sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1a79643c2239a700748387923a29bcd3f5" kindref="member">attribute</ref><sp/>==<sp/>rhs.<ref refid="structm0st4fa_1_1lexana_1_1_token_1a79643c2239a700748387923a29bcd3f5" kindref="member">attribute</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="structm0st4fa_1_1lexana_1_1_token_1abb7384f7caeedf830638cb480da03764" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::string()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structm0st4fa_1_1lexana_1_1_token_1a03050543e301ace90c5bcb0363432832" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structm0st4fa_1_1lexana_1_1_token_1a03050543e301ace90c5bcb0363432832" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1a03050543e301ace90c5bcb0363432832" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>stringfy(this-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(std::string)this-&gt;attribute<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TerminalT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AttrT&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>(TerminalT<sp/>a)<sp/>{<sp/>TerminalT::T_EOF;<sp/>TerminalT::T_EPSILON;<sp/>stringfy(a);<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Token&lt;TerminalT,<sp/>AttrT&gt;<sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1a45437adb5499adcbd7c98653bba277b5" kindref="member">Token&lt;TerminalT, AttrT&gt;::EPSILON</ref><sp/>=<sp/>{<sp/>TerminalT::T_EPSILON<sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TerminalT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AttrT&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>(TerminalT<sp/>a)<sp/>{<sp/>TerminalT::T_EOF;<sp/>TerminalT::T_EPSILON;<sp/>stringfy(a);<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Token&lt;TerminalT,<sp/>AttrT&gt;<sp/><ref refid="structm0st4fa_1_1lexana_1_1_token_1ac16458b3559cc69479bb176cdd7a5d03" kindref="member">Token&lt;TerminalT, AttrT&gt;::TEOF</ref><sp/>=<sp/>{<sp/>TerminalT::T_EOF<sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TerminalT&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>(TerminalT<sp/>a)<sp/>{<sp/>toString(a);<sp/>}</highlight></codeline>
<codeline lineno="96" refid="namespacem0st4fa_1_1lexana_1a5130a88f30b34e251b294ea69ecdae91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespacem0st4fa_1_1lexana_1a5130a88f30b34e251b294ea69ecdae91" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_token" kindref="compound">lexana::Token&lt;TerminalT&gt;</ref>&amp;<sp/>token)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>token.<ref refid="structm0st4fa_1_1lexana_1_1_token_1a03050543e301ace90c5bcb0363432832" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TokenT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputT<sp/>=<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">_view&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lexeme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespacem0st4fa_1_1lexana_1a025d151548b0a8f909c849034ae50b7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacem0st4fa_1_1lexana_1a025d151548b0a8f909c849034ae50b7d" kindref="member">TokenFactoryType</ref><sp/>=<sp/>std::function&lt;TokenT(m0st4fa::fsm::FSMStateType,<sp/>InputT)&gt;;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RESULT</highlight></codeline>
<codeline lineno="115"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TokenT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputT<sp/>=<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">_view&gt;</highlight></codeline>
<codeline lineno="116" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result" kindref="compound">LexicalAnalyzerResult</ref><sp/>{</highlight></codeline>
<codeline lineno="117" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a53358c5c4ad738b135a26ce692ebed34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a53358c5c4ad738b135a26ce692ebed34" kindref="member">TokenFactoryType</ref><sp/>=<sp/><ref refid="namespacem0st4fa_1_1lexana_1a025d151548b0a8f909c849034ae50b7d" kindref="member">lexana::TokenFactoryType&lt;TokenT, InputT&gt;</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1aa6e1695d1e7228fc57ce5d606b6f6ca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1aa6e1695d1e7228fc57ce5d606b6f6ca9" kindref="member">foundToken</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a1502d07e3ad13f3b167bf9345441285b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TokenT<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a1502d07e3ad13f3b167bf9345441285b" kindref="member">token</ref><sp/>=<sp/>TokenT{};</highlight></codeline>
<codeline lineno="124" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a5fb5e19f5b6a61014e77fb67176cc764" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsm::Indicies<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a5fb5e19f5b6a61014e77fb67176cc764" kindref="member">indicies</ref><sp/>=<sp/>fsm::Indicies{0,<sp/>0};</highlight></codeline>
<codeline lineno="126" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" kindref="member">lineNumber</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>remaining<sp/>input<sp/>after<sp/>the<sp/>lexeme<sp/>was<sp/>extracted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::string_view<sp/>remainingInput{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a3206dd3f2412fbc50a92bf2938434edc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a3206dd3f2412fbc50a92bf2938434edc" kindref="member">LexicalAnalyzerResult</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a4eefaf01242af7826e6bce23656b3624" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a4eefaf01242af7826e6bce23656b3624" kindref="member">LexicalAnalyzerResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TokenT&amp;<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a1502d07e3ad13f3b167bf9345441285b" kindref="member">token</ref>,<sp/>fsm::Indicies<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a5fb5e19f5b6a61014e77fb67176cc764" kindref="member">indicies</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" kindref="member">lineNumber</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>colNumber)<sp/>:<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a1502d07e3ad13f3b167bf9345441285b" kindref="member">token</ref>{<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a1502d07e3ad13f3b167bf9345441285b" kindref="member">token</ref><sp/>},<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a5fb5e19f5b6a61014e77fb67176cc764" kindref="member">indicies</ref>{<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a5fb5e19f5b6a61014e77fb67176cc764" kindref="member">indicies</ref><sp/>+<sp/>colNumber<sp/>},<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" kindref="member">lineNumber</ref>{<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" kindref="member">lineNumber</ref><sp/>},<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1aa6e1695d1e7228fc57ce5d606b6f6ca9" kindref="member">foundToken</ref><sp/>{<sp/>true<sp/>}<sp/>{};</highlight></codeline>
<codeline lineno="147" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a7e3c2d3ffba98e58ba3a9a156e80114c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a7e3c2d3ffba98e58ba3a9a156e80114c" kindref="member">LexicalAnalyzerResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fsm::FSMResult&amp;<sp/>fsmres,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" kindref="member">lineNumber</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>colNumber,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a53358c5c4ad738b135a26ce692ebed34" kindref="member">TokenFactoryType</ref><sp/>factory)<sp/>:<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1aa6e1695d1e7228fc57ce5d606b6f6ca9" kindref="member">foundToken</ref>{<sp/>true<sp/>},<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a1502d07e3ad13f3b167bf9345441285b" kindref="member">token</ref>{<sp/>factory((fsm::FSMStateType)fsmres.finalState,<sp/>fsmres.getMatch())<sp/>},<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a5fb5e19f5b6a61014e77fb67176cc764" kindref="member">indicies</ref>{<sp/>fsmres.<ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a5fb5e19f5b6a61014e77fb67176cc764" kindref="member">indicies</ref><sp/>+<sp/>colNumber<sp/>},<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" kindref="member">lineNumber</ref>{<ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" kindref="member">lineNumber</ref>}<sp/>{};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a28733c86a429a8e03dd0cac97cb45247" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a28733c86a429a8e03dd0cac97cb45247" kindref="member">reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;foundToken<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;token<sp/>=<sp/>TokenT{};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a85ffe495eabe63baeb02e7c3c13b4fe9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>TokenT()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a1502d07e3ad13f3b167bf9345441285b" kindref="member">token</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a862a4dd820317f6619ac35e97587264c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a862a4dd820317f6619ac35e97587264c" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::format(</highlight><highlight class="stringliteral">&quot;{{\nfoundToken:<sp/>{},\ntoken:<sp/>{},\nindicies:<sp/>{},\nlineNumber:<sp/>{}\n}}&quot;</highlight><highlight class="normal">,<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1aa6e1695d1e7228fc57ce5d606b6f6ca9" kindref="member">foundToken</ref>,<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a1502d07e3ad13f3b167bf9345441285b" kindref="member">token</ref>.toString(),<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a5fb5e19f5b6a61014e77fb67176cc764" kindref="member">indicies</ref>.toString(),<sp/><ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1af7f249c0c1e14ae8a615740ad07cff2d" kindref="member">lineNumber</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1ace65ff516f9f3c037e2ae6198f9bff3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::string()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structm0st4fa_1_1lexana_1_1_lexical_analyzer_result_1a862a4dd820317f6619ac35e97587264c" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>POSITION</highlight></codeline>
<codeline lineno="185" refid="structm0st4fa_1_1lexana_1_1_position" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1lexana_1_1_position" kindref="compound">Position</ref><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="structm0st4fa_1_1lexana_1_1_position_1a4da900d78bdb7c136efced1ee09fa950" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_position_1a4da900d78bdb7c136efced1ee09fa950" kindref="member">line</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structm0st4fa_1_1lexana_1_1_position_1a7744e3b6095f9b34c632ef30ad54f11e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1lexana_1_1_position_1a7744e3b6095f9b34c632ef30ad54f11e" kindref="member">column</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="structm0st4fa_1_1lexana_1_1_position_1a0f289da269bb8e5db7d5a7c547dbe432" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::pair&lt;size_t,<sp/>size_t&gt;()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="structm0st4fa_1_1lexana_1_1_position_1a4da900d78bdb7c136efced1ee09fa950" kindref="member">line</ref>,<sp/><ref refid="structm0st4fa_1_1lexana_1_1_position_1a7744e3b6095f9b34c632ef30ad54f11e" kindref="member">column</ref>};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="structm0st4fa_1_1lexana_1_1_position_1aeb5eb26061b61569338f04acd3a69b4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::string()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="structm0st4fa_1_1lexana_1_1_position_1acd5a606874017219be0d16594f70619c" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="structm0st4fa_1_1lexana_1_1_position_1acd5a606874017219be0d16594f70619c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structm0st4fa_1_1lexana_1_1_position_1acd5a606874017219be0d16594f70619c" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::format(</highlight><highlight class="stringliteral">&quot;({},<sp/>{})&quot;</highlight><highlight class="normal">,<sp/><ref refid="structm0st4fa_1_1lexana_1_1_position_1a4da900d78bdb7c136efced1ee09fa950" kindref="member">line</ref>,<sp/><ref refid="structm0st4fa_1_1lexana_1_1_position_1a7744e3b6095f9b34c632ef30ad54f11e" kindref="member">column</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/lexana/LADataStructs.h"/>
  </compounddef>
</doxygen>
